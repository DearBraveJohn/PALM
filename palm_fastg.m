function [G,df2] = palm_fastg(M,psi,res,plm,c)
% This function is a simplification of 'pivotal.m',
% without argument checking and that works only if:
% - rank(contrast) > 1
% - number of variance groups > 1
% 
% Inputs:
% M   : design matrix
% psi : regression coefficients
% res : residuals
% plm : a struct with many things as generated by
%       'palm.m' and 'takeargs.m'
% 
% Outputs:
% G   : In this particular case, G is the Welch v^2
%       statistic (for the extension of the Behrens-Fisher
%       problem when there are several groups).
% df2 : Degrees of freedom 2. df1 is simply rank(C) and
%       is not returned for speed and compatibility.
%
% For the full explanation, see the generic, but much
% slower 'pivotal.m'
%  
% _____________________________________
% Anderson Winkler and Tom Nichols
% FMRIB / University of Oxford
% Aug/2013
% http://brainder.org

r = size(M,2);
m = size(res,2);
[~,~,blkidx] = unique(plm.tmp.VG);

W = zeros(plm.tmp.nVG,m);
dRmb = zeros(plm.tmp.nVG,1);
cte = zeros(r^2,m);
for b = 1:plm.tmp.nVG,
    bidx = blkidx == b;
    dRmb(b) = sum(plm.tmp.dRm(bidx));
    W(b,:) = dRmb(b)./sum(res(bidx,:).^2);
    Mb = M(bidx,:)'*M(bidx,:);
    cte = cte + Mb(:)*W(b,:);
    W(b,:) = W(b,:)*sum(bidx);
end

G = zeros(1,m);
for t = 1:m,
    A = psi(:,t)'*plm.tmp.eC;
    G(t) = A*inv(plm.tmp.eC'*inv(reshape(cte(:,t),[r r]))*plm.tmp.eC)*A'/plm.tmp.rC(c); %#ok inv here
end

bsum = zeros(1,m);
sW1 = sum(W,1);
for b = 1:plm.tmp.nVG,
    bsum = bsum + bsxfun(@rdivide,(1-W(b,:)./sW1).^2,dRmb(b));
end
bsum = bsum/plm.tmp.rC(c)/(plm.tmp.rC(c)+2);
df2 = 1/3./bsum;
G = G./(1 + 2*(plm.tmp.rC(c)-1).*bsum);
