function opts = palm_defaults

% Define some defaults and organise all as a struct
opts.o               = 'palm';          % Default output string
opts.nP0             = 10000;           % Number of permutations
opts.SB              = false;           % Whole block shuffling?
opts.lx              = true;            % Lexicographic permutations?
opts.CMC             = false;           % Use Conditional Monte Carlo?
opts.igrepx          = false;           % Ignore repeated values in X?
opts.twotail         = false;           % Do a two-tailed t-test for the t-contrasts?
opts.pmethod         = 'Beckmann';      % Method to partition the model.
opts.rmethod         = 'Freedman-Lane'; % Regression/permutation method.
opts.rfallback       = 'terBraak';      % Regression/permutation method if correcting over contrasts
opts.NPC             = false;           % Do non-parametric combination?
opts.cmethod         = 'Tippett';       % Combination method.
opts.cfallback       = 'Fisher';        % (not currently used)
opts.savepara        = false;           % Save parametric p-values too?
opts.savecdf         = false;           % Save 1-p instead of true p.
opts.savelogp        = false;           % Convert p-values to -log10(p).
opts.corrmod         = false;           % FWER correction over modalities?
opts.corrcon         = false;           % FWER correction over contrasts?
opts.savemask        = false;           % Save the masks?
opts.FDR             = false;           % FDR adjustment?
opts.draft           = 0;               % Run a draft scheme
opts.clustere_t.do   = false;           % Do cluster extent for the t-stat?
opts.clusterm_t.do   = false;           % Do cluster mass for the t-stat?
opts.clustere_F.do   = false;           % Do cluster extent for the F-stat?
opts.clusterm_F.do   = false;           % Do cluster mass for the F-stat?
opts.tfce.do         = false;           % Do TFCE?
opts.tfce.H          = 2;               % TFCE H parameter
opts.tfce.E          = 0.5;             % TFCE E parameter
opts.tfce.conn       = 6;               % TFCE connectivity neighbourhood
opts.clustere_npc.do = false;           % Do cluster extent for the NPC z-stat?
opts.clusterm_npc.do = false;           % Do cluster mass for the NPC z-stat?
opts.tfce_npc.do     = false;           % Do TFCE for NPC?
opts.tfce_npc.H      = 2;               % TFCE H parameter for NPC
opts.tfce_npc.E      = 0.5;             % TFCE E parameter for NPC
opts.tfce_npc.conn   = 6;               % TFCE connectivity neighbourhood for NPC
opts.useniiclass     = true;            % Use the NIFTI class (saves memory)
opts.saveperms       = false;           % Save permutation images?
opts.inormal         = false;           % Do inverse-normal transformation?
opts.seed            = 0;               % Seed for the random number generator
opts.shrink          = false;           % Remove observations not being considered
opts.zstat           = false;           % Convert G-stat to z-stat
